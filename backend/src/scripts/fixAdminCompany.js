const mongoose = require('mongoose');
const User = require('../models/User');
const Company = require('../models/Company');

async function fixAdminCompany() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const mongoUri = process.env.MONGO_URI || 'mongodb://localhost:27017/glass-calculator';
    await mongoose.connect(mongoUri);
    console.log('‚úÖ Connected to MongoDB');

    // –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ –±–µ–∑ companyId
    const adminUser = await User.findOne({
      _id: new mongoose.Types.ObjectId('6861c17f790eae9670a32e4d'),
      role: 'admin',
      companyId: null,
    });

    if (!adminUser) {
      console.log('‚ùå Admin user not found or already has companyId');
      return;
    }

    console.log('üë§ Found admin user:', {
      id: adminUser._id,
      username: adminUser.username,
      email: adminUser.email,
      role: adminUser.role,
      companyId: adminUser.companyId,
    });

    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é
    const company = await Company.findOne({});

    if (!company) {
      console.log('‚ùå No companies found');
      return;
    }

    console.log('üè¢ Found company:', {
      id: company._id,
      name: company.name,
    });

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é –∞–¥–º–∏–Ω—É
    adminUser.companyId = company._id;
    await adminUser.save();

    console.log('‚úÖ Successfully assigned company to admin user');
    console.log('üéØ Updated user data:', {
      id: adminUser._id,
      username: adminUser.username,
      role: adminUser.role,
      companyId: adminUser.companyId,
    });
  } catch (error) {
    console.error('‚ùå Error fixing admin company:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üì§ Disconnected from MongoDB');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
fixAdminCompany();
