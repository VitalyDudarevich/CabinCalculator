import React, { useState, useEffect } from 'react';
import { API_URL as BASE_API_URL } from '../utils/api';
import AddHardwareButton from './AddHardwareButton';
import AddHardwareDialog, { type HardwareDialogItem } from './AddHardwareDialog';
import { QuantityControl } from './AddHardwareDialog';
import AddServiceDialog, { type ServiceItem } from './AddServiceDialog';
const API_URL = BASE_API_URL;

const GLASS_THICKNESS = [
  { value: '8', label: '8 –º–º' },
  { value: '10', label: '10 –º–º' },
];

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Å—Ç–µ–∫–ª–∞ –µ—Å–ª–∏ –≤ –∞–¥–º–∏–Ω–∫–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
const DEFAULT_GLASS_COLORS = [
  '–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
  '–º–∞—Ç–æ–≤—ã–π',
  '–±—Ä–æ–Ω–∑–∞',
  '–≥—Ä–∞—Ñ–∏—Ç'
];

interface Company {
  _id: string;
  name: string;
}

interface TemplateField {
  name: string;
  type: 'text' | 'number' | 'select';
  label: string;
  required: boolean;
  options?: string[];
}

interface GlassConfig {
  name: string;
  type: 'stationary' | 'swing_door' | 'sliding_door';
  color?: string;
  thickness?: string;
}

interface SizeAdjustments {
  doorHeightReduction: number;
  thresholdReduction: number;
}

interface Template {
  _id?: string;
  name: string;
  description?: string;
  type: 'straight' | 'corner' | 'unique' | 'custom' | 'glass' | 'partition';
  glassConfig?: GlassConfig[];
  sizeAdjustments?: SizeAdjustments;
  fields: TemplateField[];
  defaultHardware: string[];
  defaultServices: string[];
  customColorOption: boolean;
  exactHeightOption?: boolean;
  defaultGlassColor?: string;
  defaultGlassThickness?: string;
  companyId: string;
  isSystem?: boolean; // –ü—Ä–∏–∑–Ω–∞–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
}

interface TemplatesTabProps {
  companies: Company[];
  selectedCompanyId: string;
}

const TemplatesTab: React.FC<TemplatesTabProps> = ({ companies, selectedCompanyId }) => {
  const company = companies.find(c => c._id === selectedCompanyId);
  const [templates, setTemplates] = useState<Template[]>([]);
  const [loading, setLoading] = useState(false);
  const [editingTemplate, setEditingTemplate] = useState<Template | null>(null);
  const [showEditor, setShowEditor] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState(false);

  const companyName = company?.name || '';

  useEffect(() => {
    if (!company) return setTemplates([]);
    loadTemplates();
  }, [selectedCompanyId, company?._id]);



  const loadTemplates = async () => {
    if (!company) return;
    setError('');
    setLoading(true);
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã (–∏—Å–∫–ª—é—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ)
      const res = await fetch(`${API_URL}/templates?companyId=${company._id}`);
      let userTemplates = await res.json();
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã (–Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ)
      userTemplates = (Array.isArray(userTemplates) ? userTemplates : [])
        .filter((t: { isSystem?: boolean }) => !t.isSystem);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const systemRes = await fetch(`${API_URL}/templates/system?companyId=${company._id}`);
      const systemTemplates = systemRes.ok ? await systemRes.json() : [];
      
      // –ü–æ–º–µ—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã —Ñ–ª–∞–≥–æ–º isSystem
      const markedSystemTemplates = (Array.isArray(systemTemplates) ? systemTemplates : [])
        .map((t: { isSystem?: boolean }) => ({ ...t, isSystem: true }));
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã
      const allTemplates = [...markedSystemTemplates, ...userTemplates];
      setTemplates(allTemplates);
    } catch {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤');
      setTemplates([]);
    } finally {
      setLoading(false);
    }
  };

  const handleAddTemplate = () => {
    setEditingTemplate({
      name: '',
      description: '',
      type: 'custom',
      glassConfig: [
        { name: '–°—Ç–µ–∫–ª–æ 1', type: 'stationary' }
      ],
      fields: [],
      defaultHardware: [],
      defaultServices: [],
      customColorOption: false,
      companyId: company?._id || ''
    });
    setShowEditor(true);
  };

  const handleEditTemplate = (template: Template) => {
    setEditingTemplate({ ...template });
    setShowEditor(true);
  };

  const handleDeleteTemplate = async (template: Template) => {
    if (!window.confirm(`–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω "${template.name}"?`)) return;
    
    try {
      const res = await fetch(`${API_URL}/templates/${template._id}`, {
        method: 'DELETE',
        headers: { Authorization: `Bearer ${localStorage.getItem('token') || ''}` }
      });
      
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
      
      setTemplates(prev => prev.filter(t => t._id !== template._id));
      setSuccess(true);
      setTimeout(() => setSuccess(false), 2000);
    } catch {
      setError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞');
    }
  };

  const handleSaveTemplate = async (template: Template) => {
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º endpoint –∏ –º–µ—Ç–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —à–∞–±–ª–æ–Ω–∞
      let method: string;
      let url: string;
      
      if (template.isSystem) {
        // –î–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º PUT (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
        method = 'PUT';
        url = `${API_URL}/templates/system/${template.type}?companyId=${template.companyId}`;
      } else {
        // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ - –æ–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞
        method = template._id ? 'PUT' : 'POST';
        url = template._id ? `${API_URL}/templates/${template._id}` : `${API_URL}/templates`;
      }
      
      const res = await fetch(url, {
        method,
        headers: { 
          'Content-Type': 'application/json',
          Authorization: `Bearer ${localStorage.getItem('token') || ''}`
        },
        body: JSON.stringify(template)
      });
      
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
      
      const savedTemplate = await res.json();
      
      if (template.isSystem) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —à–∞–±–ª–æ–Ω –≤ —Å–ø–∏—Å–∫–µ
        setTemplates(prev => prev.map(t => 
          t.isSystem && t.type === template.type 
            ? { ...savedTemplate, isSystem: true }
            : t
        ));
      } else {
        // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
        if (template._id) {
          setTemplates(prev => prev.map(t => t._id === template._id ? savedTemplate : t));
        } else {
          setTemplates(prev => [...prev, savedTemplate]);
        }
      }
      
      setShowEditor(false);
      setEditingTemplate(null);
      setSuccess(true);
      setTimeout(() => setSuccess(false), 2000);
    } catch {
      setError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞');
    }
  };

  if (!company) return <div style={{ color: '#888', margin: 32 }}>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é</div>;

  if (showEditor && editingTemplate) {
    return (
      <TemplateEditor
        template={editingTemplate}
        onSave={handleSaveTemplate}
        onCancel={() => {
          setShowEditor(false);
          setEditingTemplate(null);
        }}
        companyId={company._id}
      />
    );
  }

  return (
    <div className="templates-tab-root" style={{ maxWidth: 800, margin: '0 auto', background: '#fff', borderRadius: 12, boxShadow: '0 1px 4px #0001', padding: 24 }}>
      <div style={{ display: 'flex', alignItems: 'center', marginBottom: 24, gap: 16 }}>
        <h2 style={{ margin: 0, fontSize: 24, fontWeight: 700, flex: 1 }}>–®–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π {companyName}</h2>
        <button
          onClick={handleAddTemplate}
          style={{
            padding: '8px 18px',
            borderRadius: 8,
            background: '#646cff',
            color: '#fff',
            border: 'none',
            fontWeight: 600,
            fontSize: 16,
            cursor: 'pointer',
            transition: 'background 0.15s',
            lineHeight: 1.25,
            height: '40px',
          }}
          disabled={loading}
        >
          –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω
        </button>
      </div>

      {error && <div style={{ color: 'crimson', marginBottom: 12 }}>{error}</div>}
      {success && <div style={{ color: 'green', marginBottom: 12 }}>–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</div>}

      {loading ? (
        <div style={{ textAlign: 'center', padding: 20 }}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      ) : templates.length === 0 ? (
        <div style={{ color: '#bbb', fontStyle: 'italic', textAlign: 'center', padding: 40 }}>
          –ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
        </div>
      ) : (
        <div style={{ display: 'flex', flexDirection: 'column', gap: 24 }}>
          {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã */}
          {(() => {
            const systemTemplates = templates.filter(t => t.isSystem);
            return systemTemplates.length > 0 && (
              <div>
                <h3 style={{ 
                  margin: '0 0 16px 0', 
                  fontSize: 20, 
                  fontWeight: 600, 
                  color: '#646cff',
                  borderBottom: '2px solid #646cff',
                  paddingBottom: 8
                }}>
                  üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                </h3>
                <div style={{ fontSize: 14, color: '#666', marginBottom: 16, fontStyle: 'italic' }}>
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã –∏ —É—Å–ª—É–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
                </div>
                <div style={{ display: 'grid', gap: 12 }}>
                  {systemTemplates.map((template) => (
                    <TemplateCard key={template._id} template={template} onEdit={handleEditTemplate} onDelete={handleDeleteTemplate} />
                  ))}
                </div>
              </div>
            );
          })()}

          {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã */}
          {(() => {
            const userTemplates = templates.filter(t => !t.isSystem);
            return userTemplates.length > 0 && (
              <div>
                <h3 style={{ 
                  margin: '0 0 16px 0', 
                  fontSize: 20, 
                  fontWeight: 600, 
                  color: '#28a745',
                  borderBottom: '2px solid #28a745',
                  paddingBottom: 8
                }}>
                  üìê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã
                </h3>
                <div style={{ display: 'grid', gap: 12 }}>
                  {userTemplates.map((template) => (
                    <TemplateCard key={template._id} template={template} onEdit={handleEditTemplate} onDelete={handleDeleteTemplate} />
                  ))}
                </div>
              </div>
            );
          })()}
        </div>
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —à–∞–±–ª–æ–Ω–æ–≤
const TemplateEditor: React.FC<{
  template: Template;
  onSave: (template: Template) => void;
  onCancel: () => void;
  companyId: string;
}> = ({ template, onSave, onCancel, companyId }) => {
  const [editedTemplate, setEditedTemplate] = useState<Template>({ ...template });
  const [hardwareList, setHardwareList] = useState<{ _id: string; name: string; price: number }[]>([]);
  const [servicesList, setServicesList] = useState<{ _id: string; name: string; price: number }[]>([]);  
  const [glassColors, setGlassColors] = useState<string[]>([]);
  const [showAddHardwareDialog, setShowAddHardwareDialog] = useState(false);
  const [selectedHardware, setSelectedHardware] = useState<HardwareDialogItem[]>([]);
  const [showAddServiceDialog, setShowAddServiceDialog] = useState(false);
  const [selectedServices, setSelectedServices] = useState<ServiceItem[]>([]);

  useEffect(() => {
    loadHardwareAndServices();
  }, [companyId]);

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º selectedHardware –Ω–∞ –æ—Å–Ω–æ–≤–µ defaultHardware –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (hardwareList.length > 0 && editedTemplate.defaultHardware.length > 0) {
      const initialSelected: HardwareDialogItem[] = editedTemplate.defaultHardware
        .map(hardwareName => {
          const hardware = hardwareList.find(h => h.name === hardwareName);
          if (hardware) {
            return {
              hardwareId: hardware._id,
              name: hardware.name,
              quantity: 1
            };
          }
          return null;
        })
        .filter(Boolean) as HardwareDialogItem[];
      setSelectedHardware(initialSelected);
    }
  }, [hardwareList, editedTemplate.defaultHardware]);

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º selectedServices –Ω–∞ –æ—Å–Ω–æ–≤–µ defaultServices –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (servicesList.length > 0 && editedTemplate.defaultServices.length > 0) {
      const initialSelected: ServiceItem[] = editedTemplate.defaultServices
        .map(serviceName => {
          const service = servicesList.find(s => s.name === serviceName);
          if (service) {
            return {
              serviceId: service._id,
              name: service.name,
              price: service.price
            };
          }
          return null;
        })
        .filter(Boolean) as ServiceItem[];
      setSelectedServices(initialSelected);
    }
  }, [servicesList, editedTemplate.defaultServices]);

  const loadHardwareAndServices = async () => {
    try {
      const [hardwareRes, servicesRes, glassRes] = await Promise.all([
        fetch(`${API_URL}/hardware?companyId=${companyId}`),
        fetch(`${API_URL}/services?companyId=${companyId}`),
        fetch(`${API_URL}/glass?companyId=${companyId}`)
      ]);
      
      const hardware = await hardwareRes.json();
      const services = await servicesRes.json();
      const glass = await glassRes.json();
      
      setHardwareList(Array.isArray(hardware) ? hardware : []);
      setServicesList(Array.isArray(services) ? services : []);
      
      console.log('TemplateEditor: glass data received:', glass);
      
      // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Å—Ç–µ–∫–ª–∞ –∫–∞–∫ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ
      const uniqueColors = Array.from(new Set((Array.isArray(glass) ? glass : [])
        .map((g: { color?: string }) => g.color)
        .filter((c: unknown): c is string => Boolean(c))
      ));
      
      console.log('TemplateEditor: unique colors:', uniqueColors);
      
      // –ï—Å–ª–∏ –Ω–µ—Ç —Ü–≤–µ—Ç–æ–≤ –∏–∑ –∞–¥–º–∏–Ω–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
      const finalColors = uniqueColors.length > 0 ? uniqueColors : DEFAULT_GLASS_COLORS;
      console.log('TemplateEditor: final colors:', finalColors);
      setGlassColors(finalColors);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞
      setGlassColors(DEFAULT_GLASS_COLORS);
    }
  };

  const handleSave = () => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
    if (!editedTemplate.name.trim()) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return;
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç–µ–∫–æ–ª
    const generatedFields: TemplateField[] = [];
    
    editedTemplate.glassConfig?.forEach((glass, index) => {
      // –ü–æ–ª–µ —à–∏—Ä–∏–Ω—ã
      generatedFields.push({
        name: `width_${index + 1}`,
        type: 'number',
        label: `–®–∏—Ä–∏–Ω–∞ (–º–º)`,
        required: true,
      });

      // –ü–æ–ª–µ –≤—ã—Å–æ—Ç—ã
      generatedFields.push({
        name: `height_${index + 1}`,
        type: 'number',
        label: `–í—ã—Å–æ—Ç–∞ (–º–º)`,
        required: true,
      });
    });

    const templateToSave = {
      ...editedTemplate,
      fields: generatedFields,
      defaultHardware: selectedHardware.map(hw => hw.name),
      defaultServices: selectedServices.map(service => service.name),
    };

    onSave(templateToSave);
  };

  return (
    <div style={{ maxWidth: 800, margin: '0 auto', background: '#fff', borderRadius: 12, boxShadow: '0 1px 4px #0001', padding: 24 }}>
      <h2 style={{ margin: '0 0 24px 0', fontSize: 24, fontWeight: 700 }}>
        {template._id ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞' : '–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞'}
      </h2>

      <div style={{ display: 'grid', gap: 16 }}>
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div>
          <label style={{ display: 'block', marginBottom: 4, fontWeight: 600, fontSize: 14 }}>–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ *</label>
          <input
            type="text"
            value={editedTemplate.name}
            onChange={e => setEditedTemplate(prev => ({ ...prev, name: e.target.value }))}
            style={{ 
              width: '100%', 
              padding: '8px 12px', 
              border: '1px solid #ccc', 
              borderRadius: 6, 
              fontSize: 14,
              boxSizing: 'border-box',
              fontFamily: 'inherit'
            }}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢—Ä–∞–ø–µ—Ü–∏—è"
          />
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: 4, fontWeight: 600, fontSize: 14 }}>–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            value={editedTemplate.description || ''}
            onChange={e => setEditedTemplate(prev => ({ ...prev, description: e.target.value }))}
            style={{ 
              width: '100%', 
              padding: '8px 12px', 
              border: '1px solid #ccc', 
              borderRadius: 6, 
              fontSize: 14, 
              minHeight: 60,
              boxSizing: 'border-box',
              fontFamily: 'inherit',
              resize: 'vertical'
            }}
            placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
          />
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: 4, fontWeight: 600, fontSize: 14 }}>–¢–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</label>
          <select
            value={editedTemplate.type}
            onChange={e => setEditedTemplate(prev => ({ ...prev, type: e.target.value as 'straight' | 'corner' | 'unique' | 'custom' | 'glass' | 'partition' }))}
            style={{ 
              width: '100%', 
              padding: '8px 12px', 
              border: '1px solid #ccc', 
              borderRadius: 6, 
              fontSize: 14,
              boxSizing: 'border-box',
              fontFamily: 'inherit'
            }}
          >
            <option value="custom">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π</option>
            <option value="glass">–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–µ —Å—Ç–µ–∫–ª–æ</option>
            <option value="straight">–ü—Ä—è–º–∞—è —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è</option>
            <option value="corner">–£–≥–ª–æ–≤–∞—è —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è</option>
            <option value="unique">–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</option>
            <option value="partition">–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∞</option>
          </select>
        </div>

        {/* –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç–µ–∫–æ–ª */}
        <div>
          <h3 style={{ margin: '0 0 12px 0', fontSize: 18, fontWeight: 600 }}>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç–µ–∫–æ–ª</h3>
          
          {/* –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–µ–∫–ª–∞ */}
          <div style={{ 
            border: '1px solid #e5e7eb', 
            borderRadius: 6, 
            padding: 12,
            background: '#f0f7ff',
            marginBottom: 16
          }}>
            <h4 style={{ margin: '0 0 8px 0', fontSize: 14, fontWeight: 600, color: '#1565c0' }}>–î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–µ–∫–ª–∞</h4>
            <div style={{ display: 'flex', gap: 16, alignItems: 'center', flexWrap: 'wrap' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: 6, fontSize: 13, minWidth: '200px' }}>
                –¶–≤–µ—Ç —Å—Ç–µ–∫–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
                <select
                  value={editedTemplate.defaultGlassColor || ''}
                  onChange={e => setEditedTemplate(prev => ({
                    ...prev,
                    defaultGlassColor: e.target.value
                  }))}
                  style={{ 
                    minWidth: '120px', 
                    padding: '4px 6px', 
                    border: '1px solid #d1d5db', 
                    borderRadius: 4, 
                    fontSize: 13 
                  }}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç</option>
                  {glassColors.map(color => (
                    <option key={color} value={color}>{color}</option>
                  ))}
                </select>
              </label>
              
              <label style={{ display: 'flex', alignItems: 'center', gap: 6, fontSize: 13, minWidth: '200px' }}>
                –¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–∫–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
                <select
                  value={editedTemplate.defaultGlassThickness || ''}
                  onChange={e => setEditedTemplate(prev => ({
                    ...prev,
                    defaultGlassThickness: e.target.value
                  }))}
                  style={{ 
                    minWidth: '80px', 
                    padding: '4px 6px', 
                    border: '1px solid #d1d5db', 
                    borderRadius: 4, 
                    fontSize: 13 
                  }}
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—â–∏–Ω—É</option>
                  {GLASS_THICKNESS.map(thickness => (
                    <option key={thickness.value} value={thickness.value}>{thickness.label}</option>
                  ))}
                </select>
              </label>
            </div>
            <div style={{ fontSize: 11, color: '#666', marginTop: 6, fontStyle: 'italic' }}>
              –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            </div>
          </div>
          
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–≤ */}
          <div style={{ 
            border: '1px solid #e5e7eb', 
            borderRadius: 6, 
            padding: 12,
            background: '#f8f9fa',
            marginBottom: 16
          }}>
            <h4 style={{ margin: '0 0 8px 0', fontSize: 14, fontWeight: 600 }}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–≤</h4>
            <div style={{ display: 'flex', gap: 16, alignItems: 'center', flexWrap: 'wrap' }}>
              <label style={{ display: 'flex', alignItems: 'center', gap: 6, fontSize: 13 }}>
                –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –¥–≤–µ—Ä–∏:
                <input
                  type="number"
                  min="0"
                  max="50"
                  value={editedTemplate.sizeAdjustments?.doorHeightReduction || 8}
                  onChange={e => setEditedTemplate(prev => ({
                    ...prev,
                    sizeAdjustments: {
                      ...prev.sizeAdjustments,
                      doorHeightReduction: parseInt(e.target.value) || 8,
                      thresholdReduction: prev.sizeAdjustments?.thresholdReduction || 15
                    }
                  }))}
                  style={{ width: '60px', padding: '4px 6px', border: '1px solid #d1d5db', borderRadius: 4, fontSize: 13 }}
                />
                –º–º
              </label>
              
              <label style={{ display: 'flex', alignItems: 'center', gap: 6, fontSize: 13 }}>
                –£–º–µ–Ω—å—à–µ–Ω–∏–µ –¥–ª—è –ø–æ—Ä–æ–∂–∫–∞:
                <input
                  type="number"
                  min="0"
                  max="50"
                  value={editedTemplate.sizeAdjustments?.thresholdReduction || 15}
                  onChange={e => setEditedTemplate(prev => ({
                    ...prev,
                    sizeAdjustments: {
                      ...prev.sizeAdjustments,
                      thresholdReduction: parseInt(e.target.value) || 15,
                      doorHeightReduction: prev.sizeAdjustments?.doorHeightReduction || 8
                    }
                  }))}
                  style={{ width: '60px', padding: '4px 6px', border: '1px solid #d1d5db', borderRadius: 4, fontSize: 13 }}
                />
                –º–º
              </label>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Å—Ç–µ–∫–æ–ª */}
          <div style={{ display: 'flex', flexDirection: 'column', gap: 12 }}>
            {(editedTemplate.glassConfig || []).map((glass, index) => (
              <div key={index} style={{ 
                border: '1px solid #e5e7eb', 
                borderRadius: 6, 
                padding: 16,
                background: '#fff',
                position: 'relative'
              }}>
                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã—Ä–æ–≤–Ω–µ–Ω–∞ –ø–æ –∫—Ä–∞—é –ø–æ–ª—è –¢–∏–ø */}
                <button
                  onClick={() => {
                    if ((editedTemplate.glassConfig?.length || 0) <= 1) {
                      alert('–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω–æ —Å—Ç–µ–∫–ª–æ');
                      return;
                    }
                    const newGlassConfig = editedTemplate.glassConfig?.filter((_, i) => i !== index) || [];
                    setEditedTemplate(prev => ({ ...prev, glassConfig: newGlassConfig }));
                  }}
                  style={{
                    position: 'absolute',
                    top: 8,
                    right: -4,
                    width: 32,
                    height: 32,
                    border: 'none',
                    borderRadius: '50%',
                    background: 'none',
                    color: '#e53935',
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    fontSize: 22,
                    transition: 'color 0.15s',
                    margin: 0,
                  }}
                  title="–£–¥–∞–ª–∏—Ç—å —Å—Ç–µ–∫–ª–æ"
                  onMouseOver={e => (e.currentTarget.style.color = '#b71c1c')}
                  onMouseOut={e => (e.currentTarget.style.color = '#e53935')}
                >
                  √ó
                </button>

                <div style={{ display: 'flex', gap: 20 }}>
                  {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–µ–∫–ª–∞ */}
                  <div style={{ flex: 1 }}>
                    <label style={{ display: 'block', marginBottom: 4, fontSize: 12, fontWeight: 500 }}>
                      –ù–∞–∑–≤–∞–Ω–∏–µ
                    </label>
                    <input
                      type="text"
                      value={glass.name}
                      onChange={e => {
                        const newGlassConfig = [...(editedTemplate.glassConfig || [])];
                        newGlassConfig[index] = { ...glass, name: e.target.value };
                        setEditedTemplate(prev => ({ ...prev, glassConfig: newGlassConfig }));
                      }}
                      style={{
                        width: '100%',
                        padding: '6px 8px',
                        border: '1px solid #d1d5db',
                        borderRadius: 4,
                        fontSize: 13
                      }}
                    />
                  </div>

                  {/* –¢–∏–ø —Å—Ç–µ–∫–ª–∞ */}
                  <div style={{ flex: 1 }}>
                    <label style={{ display: 'block', marginBottom: 4, fontSize: 12, fontWeight: 500 }}>
                      –¢–∏–ø
                    </label>
                    <select
                      value={glass.type}
                      onChange={e => {
                        const newGlassConfig = [...(editedTemplate.glassConfig || [])];
                        newGlassConfig[index] = { ...glass, type: e.target.value as 'stationary' | 'swing_door' | 'sliding_door' };
                        setEditedTemplate(prev => ({ ...prev, glassConfig: newGlassConfig }));
                      }}
                      style={{
                        width: '100%',
                        padding: '6px 8px',
                        border: '1px solid #d1d5db',
                        borderRadius: 4,
                        fontSize: 13
                      }}
                    >
                      <option value="stationary">–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä</option>
                      <option value="swing_door">–î–≤–µ—Ä—å —Ä–∞—Å–ø–∞—à–Ω–∞—è</option>
                      <option value="sliding_door">–î–≤–µ—Ä—å —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è</option>
                    </select>
                  </div>
                </div>
                
                {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞ —Å—Ç–µ–∫–ª–∞ */}
                <div style={{ marginTop: 8, fontSize: 12, color: '#666' }}>
                  {glass.type === 'stationary' && 'üî∑ –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä'}
                  {glass.type === 'swing_door' && `üîπ –î–≤–µ—Ä—å —Ä–∞—Å–ø–∞—à–Ω–∞—è (-${editedTemplate.sizeAdjustments?.doorHeightReduction || 8}–º–º –ø–æ –≤—ã—Å–æ—Ç–µ, –æ–ø—Ü–∏—è –ø–æ—Ä–æ–∂–∫–∞ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ)`}
                  {glass.type === 'sliding_door' && `üîπ –î–≤–µ—Ä—å —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è (-${editedTemplate.sizeAdjustments?.doorHeightReduction || 8}–º–º –ø–æ –≤—ã—Å–æ—Ç–µ)`}
                </div>


              </div>
            ))}

            {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–µ–∫–ª–∞ */}
            <div style={{ marginTop: 12 }}>
              <button
                onClick={() => {
                  const newGlass: GlassConfig = {
                    name: `–°—Ç–µ–∫–ª–æ ${(editedTemplate.glassConfig?.length || 0) + 1}`,
                    type: 'stationary',
                    color: '',
                    thickness: ''
                  };
                  setEditedTemplate(prev => ({
                    ...prev,
                    glassConfig: [...(prev.glassConfig || []), newGlass]
                  }));
                }}
                style={{
                  padding: '8px 16px',
                  borderRadius: 6,
                  background: '#28a745',
                  color: '#fff',
                  border: 'none',
                  fontSize: 14,
                  cursor: 'pointer',
                  fontWeight: 600
                }}
              >
                –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–µ–∫–ª–æ
              </button>
            </div>
          </div>
        </div>



        {/* –§—É—Ä–Ω–∏—Ç—É—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é */}
        <div style={{ marginTop: 24 }}>
          <h3 style={{ margin: '0 0 12px 0', fontSize: 18, fontWeight: 600 }}>–§—É—Ä–Ω–∏—Ç—É—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</h3>
          
          {/* –û–ø—Ü–∏–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∏ –≤—ã—Å–æ—Ç—ã */}
          <div style={{ marginBottom: 16 }}>
            <label style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 14, marginBottom: 8 }}>
              <input
                type="checkbox"
                checked={editedTemplate.customColorOption}
                onChange={e => setEditedTemplate(prev => ({ ...prev, customColorOption: e.target.checked }))}
              />
              –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ü–∏—é "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ü–≤–µ—Ç"
            </label>
            <label style={{ display: 'flex', alignItems: 'center', gap: 8, fontSize: 14 }}>
              <input
                type="checkbox"
                checked={editedTemplate.exactHeightOption || false}
                onChange={e => setEditedTemplate(prev => ({ ...prev, exactHeightOption: e.target.checked }))}
              />
              –í–∫–ª—é—á–∏—Ç—å –æ–ø—Ü–∏—é "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤—ã—Å–æ—Ç–∞"
            </label>
          </div>
          
          <div style={{ marginBottom: 12 }}>
            <AddHardwareButton onClick={() => setShowAddHardwareDialog(true)} />
          </div>

          {selectedHardware.length > 0 && (
            <div style={{ marginBottom: 12 }}>
              {selectedHardware.map((hw, idx) => (
                <div key={idx} style={{ display: 'flex', alignItems: 'center', background: '#fff', border: '1px solid #e5e7eb', borderRadius: 6, padding: '6px 10px', marginBottom: 6, height: 43 }}>
                  <span style={{ flex: 1, minWidth: 0 }}>{hw.name}</span>
                  <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginLeft: 'auto' }}>
                    <QuantityControl
                      value={hw.quantity}
                      onChange={v => setSelectedHardware(list => list.map((item, i) => i === idx ? { ...item, quantity: v } : item))}
                    />
                    <button
                      onClick={() => setSelectedHardware(list => list.filter((_, i) => i !== idx))}
                      style={{
                        width: 32,
                        height: 32,
                        border: 'none',
                        borderRadius: '50%',
                        background: 'none',
                        color: '#e53935',
                        cursor: 'pointer',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        fontSize: 22,
                        transition: 'color 0.15s',
                        margin: 0,
                      }}
                      title="–£–¥–∞–ª–∏—Ç—å"
                      onMouseOver={e => (e.currentTarget.style.color = '#b71c1c')}
                      onMouseOut={e => (e.currentTarget.style.color = '#e53935')}
                    >
                      √ó
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}

          <div style={{ fontSize: 12, color: '#666' }}>
            –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          </div>
        </div>

        {/* –£—Å–ª—É–≥–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é */}
        <div>
          <h3 style={{ margin: '0 0 12px 0', fontSize: 18, fontWeight: 600 }}>–£—Å–ª—É–≥–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</h3>
          
          <div style={{ marginBottom: 12 }}>
            <button
              onClick={() => setShowAddServiceDialog(true)}
              style={{
                padding: '10px 12px',
                borderRadius: 8,
                background: '#fff',
                color: '#646cff',
                border: '2px solid #646cff',
                fontWeight: 600,
                fontSize: 16,
                cursor: 'pointer',
                width: '100%',
              }}
            >
              –î–û–ë–ê–í–ò–¢–¨ –£–°–õ–£–ì–£
            </button>
          </div>

          {selectedServices.length > 0 && (
            <div style={{ marginBottom: 12 }}>
              {selectedServices.map((service, idx) => (
                <div key={idx} style={{ display: 'flex', alignItems: 'center', background: '#fff', border: '1px solid #e5e7eb', borderRadius: 6, padding: '6px 10px', marginBottom: 6, height: 43 }}>
                  <span style={{ flex: 1, minWidth: 0 }}>{service.name}</span>
                  <button
                    onClick={() => setSelectedServices(list => list.filter((_, i) => i !== idx))}
                    style={{
                      width: 32,
                      height: 32,
                      border: 'none',
                      borderRadius: '50%',
                      background: 'none',
                      color: '#e53935',
                      cursor: 'pointer',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      fontSize: 22,
                      transition: 'color 0.15s',
                      margin: 0,
                    }}
                    title="–£–¥–∞–ª–∏—Ç—å"
                    onMouseOver={e => (e.currentTarget.style.color = '#b71c1c')}
                    onMouseOut={e => (e.currentTarget.style.color = '#e53935')}
                  >
                    √ó
                  </button>
                </div>
              ))}
            </div>
          )}

          <div style={{ fontSize: 12, color: '#666' }}>
            –í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          </div>
        </div>



        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div style={{ display: 'flex', gap: 12, marginTop: 20 }}>
          <button
            onClick={handleSave}
            style={{
              padding: '10px 20px',
              borderRadius: 8,
              background: '#646cff',
              color: '#fff',
              border: 'none',
              fontWeight: 600,
              fontSize: 16,
              cursor: 'pointer',
              flex: 1
            }}
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </button>
          <button
            onClick={onCancel}
            style={{
              padding: '10px 20px',
              borderRadius: 8,
              background: '#6c757d',
              color: '#fff',
              border: 'none',
              fontWeight: 600,
              fontSize: 16,
              cursor: 'pointer',
              flex: 1
            }}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã */}
      {showAddHardwareDialog && (
        <AddHardwareDialog
          hardwareList={hardwareList}
          onSave={selected => {
            setSelectedHardware(list => [...list, ...selected]);
            setShowAddHardwareDialog(false);
          }}
          onClose={() => setShowAddHardwareDialog(false)}
          projectHardware={selectedHardware}
        />
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥ */}
      {showAddServiceDialog && (
        <AddServiceDialog
          serviceList={servicesList.map(s => ({ serviceId: s._id, name: s.name, price: s.price }))}
          projectServices={selectedServices}
          onSave={selected => {
            setSelectedServices(selected);
            setShowAddServiceDialog(false);
          }}
          onClose={() => setShowAddServiceDialog(false)}
        />
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —à–∞–±–ª–æ–Ω–∞
const TemplateCard: React.FC<{
  template: Template;
  onEdit: (template: Template) => void;
  onDelete: (template: Template) => void;
}> = ({ template, onEdit, onDelete }) => {
  return (
    <div style={{ 
      border: '1px solid #e5e7eb', 
      borderRadius: 8, 
      padding: 16, 
      background: template.isSystem ? '#f8f9ff' : '#fafbff',
      boxShadow: '0 1px 2px rgba(0,0,0,0.02)'
    }}>
      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 8 }}>
        <h3 style={{ margin: 0, fontSize: 18, fontWeight: 600, color: '#000' }}>
          {template.name}
          {template.isSystem && (
            <span style={{ 
              marginLeft: 8, 
              fontSize: 12, 
              color: '#646cff', 
              backgroundColor: '#e8eaff', 
              padding: '2px 6px', 
              borderRadius: 4,
              fontWeight: 'normal'
            }}>
              –°–∏—Å—Ç–µ–º–Ω—ã–π
            </span>
          )}
        </h3>
        <div style={{ display: 'flex', gap: 8 }}>
          <button
            onClick={() => onEdit(template)}
            style={{
              padding: '4px 12px',
              borderRadius: 6,
              background: template.isSystem ? '#646cff' : '#646cff',
              color: '#fff',
              border: 'none',
              fontSize: 14,
              cursor: 'pointer'
            }}
          >
            {template.isSystem ? '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å' : '–ò–∑–º–µ–Ω–∏—Ç—å'}
          </button>
          {!template.isSystem && (
            <button
              onClick={() => onDelete(template)}
              style={{
                padding: '4px 12px',
                borderRadius: 6,
                background: '#dc3545',
                color: '#fff',
                border: 'none',
                fontSize: 14,
                cursor: 'pointer'
              }}
            >
              –£–¥–∞–ª–∏—Ç—å
            </button>
          )}
        </div>
      </div>
      
      {template.description && (
        <p style={{ margin: '8px 0', color: '#666', fontSize: 14 }}>{template.description}</p>
      )}
      
      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: 12, marginTop: 12 }}>
        <div style={{ fontSize: 14 }}>
          <strong>–¢–∏–ø:</strong> {
            template.type === 'custom' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π' :
            template.type === 'glass' ? '–°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–µ —Å—Ç–µ–∫–ª–æ' :
            template.type === 'straight' ? '–ü—Ä—è–º–∞—è —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è' :
            template.type === 'corner' ? '–£–≥–ª–æ–≤–∞—è —Ä–∞–∑–¥–≤–∏–∂–Ω–∞—è' :
            template.type === 'unique' ? '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è' :
            template.type === 'partition' ? '–ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∞' :
            template.type
          }
        </div>
        <div style={{ fontSize: 14 }}>
          <strong>–§—É—Ä–Ω–∏—Ç—É—Ä–∞:</strong> {template.defaultHardware.length} –ø–æ–∑–∏—Ü–∏–π
        </div>
        <div style={{ fontSize: 14 }}>
          <strong>–£—Å–ª—É–≥–∏:</strong> {template.defaultServices.length} –ø–æ–∑–∏—Ü–∏–π
        </div>
        <div style={{ fontSize: 14 }}>
          <strong>–û–ø—Ü–∏–∏:</strong> 
          {template.customColorOption && ' –¶–≤–µ—Ç'}
          {template.exactHeightOption && ' –í—ã—Å–æ—Ç–∞'}
          {!template.customColorOption && !template.exactHeightOption && ' –ù–µ—Ç'}
        </div>
      </div>
    </div>
  );
};

export default TemplatesTab; 