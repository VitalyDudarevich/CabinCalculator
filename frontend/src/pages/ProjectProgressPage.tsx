import React, { useState, useEffect } from 'react';
import type { User } from '../types/User';
import KanbanBoard from '../components/KanbanBoard';
import CalculatorForm from '../components/CalculatorForm';
import CalculationDetails from '../components/CalculationDetails';
import type { Project } from '../components/ProjectHistory';
import type { DraftProjectData } from '../components/CalculationDetails';
import { API_URL } from '../utils/api';
import { fetchWithAuth } from '../utils/auth';
import { getStatuses, type Status } from '../utils/statusApi';

interface ProjectProgressPageProps {
  user: User | null;
  selectedCompanyId: string;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–∫–∞–∫ –≤ CalculatorPage)
interface Settings {
  currency: string;
  usdRate: string;
  rrRate: string;
  showUSD: boolean;
  showRR: boolean;
  baseCosts: { id: string; name: string; value: number }[];
  baseIsPercent: boolean;
  basePercentValue: number;
  customColorSurcharge?: number;
  baseCostMode?: 'fixed' | 'percentage';
  baseCostPercentage?: number;
  glassList?: { color: string; thickness?: string; thickness_mm?: number; price: number; companyId: string }[];
  hardwareList?: { _id?: string; name: string; price: number; companyId?: string }[];
  statusList?: Status[]; // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã
}

const ProjectProgressPage: React.FC<ProjectProgressPageProps> = ({ 
  user, 
  selectedCompanyId 
}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [isEditModalOpen, setIsEditModalOpen] = useState(false);
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);
  const [draftProjectData, setDraftProjectData] = useState<DraftProjectData>({});
  const [totalPrice, setTotalPrice] = useState(0);
  const [settings, setSettings] = useState<Settings | null>(null);
  const [isLoadingData, setIsLoadingData] = useState(false);
  const [kanbanKey, setKanbanKey] = useState(0); // –ö–ª—é—á –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–Ω–±–∞–Ω –¥–æ—Å–∫–∏
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [searchTerm, setSearchTerm] = useState('');
  const [dateFilter, setDateFilter] = useState<'all' | 'today' | 'week' | 'month' | 'custom'>('all');
  const [customDateFrom, setCustomDateFrom] = useState('');
  const [customDateTo, setCustomDateTo] = useState('');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  const [isMobile, setIsMobile] = useState(false);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth < 768);
    checkMobile(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    window.addEventListener('resize', checkMobile);
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
  useEffect(() => {
    if (isMobile) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞ –Ω–∞ iOS
      const style = document.createElement('style');
      style.textContent = `
        body {
          overflow: auto !important;
          -webkit-overflow-scrolling: touch !important;
          height: auto !important;
        }
        html {
          overflow: auto !important;
          -webkit-overflow-scrolling: touch !important;
          height: auto !important;
        }
        * {
          -webkit-overflow-scrolling: touch;
        }
      `;
      document.head.appendChild(style);
      
      return () => {
        document.head.removeChild(style);
      };
    }
  }, [isMobile]);

  // –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ ID –¥–ª—è –∞–¥–º–∏–Ω–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let effectiveCompanyId = selectedCompanyId;
  if (user && (user.role === 'admin' || user.role === 'user')) {
    const id = typeof user.companyId === 'string' ? user.companyId : 
               (user.companyId && typeof user.companyId === 'object' && '_id' in user.companyId ? user.companyId._id : '');
    effectiveCompanyId = id;
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
  useEffect(() => {
    if (!effectiveCompanyId) {
      setSettings(null);
      return;
    }

    const loadCalculatorData = async () => {
      setIsLoadingData(true);
      try {
        const [settingsRes, glassRes, hardwareRes, statusesData] = await Promise.all([
          fetchWithAuth(`${API_URL}/settings?companyId=${effectiveCompanyId}`),
          fetchWithAuth(`${API_URL}/glass?companyId=${effectiveCompanyId}`),
          fetchWithAuth(`${API_URL}/hardware?companyId=${effectiveCompanyId}`),
          getStatuses(effectiveCompanyId),
        ]);
        
        const [settingsData, glassList, hardwareList] = await Promise.all([
          settingsRes.json(),
          glassRes.json(),
          hardwareRes.json(),
        ]);
        
        if (Array.isArray(settingsData) && settingsData.length > 0) {
          const combinedSettings: Settings = {
            ...settingsData[0],
            glassList,
            hardwareList,
            statusList: statusesData || [], // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –≤ settings
          };
          setSettings(combinedSettings);
        } else {
          setSettings(null);
        }
      } catch (e) {
        console.error('ProjectProgressPage: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
        setSettings(null);
      } finally {
        setIsLoadingData(false);
      }
    };

    loadCalculatorData();
  }, [effectiveCompanyId]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
  const handleProjectEdit = (project: Project) => {
    console.log('üîß Opening edit modal for project:', project.name);
    setSelectedProject(project);
    const newDraftData = {
      ...project.data,
      projectName: project.name,
      customer: project.customer,
      priceHistory: project.priceHistory,
      statusHistory: project.statusHistory,
      createdAt: project.createdAt,
      _id: project._id,
      status: project.status,
      statusId: project.statusId,
    };
    setDraftProjectData(newDraftData);
    console.log('üìù Draft data set:', draftProjectData, '->', newDraftData);
    setIsEditModalOpen(true);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
  const handleProjectUpdate = (updatedProject?: Project) => {
    console.log('üö®üö®üö® handleProjectUpdate CALLED!', {
      projectName: updatedProject?.name,
      projectId: updatedProject?._id,
      currentKanbanKey: kanbanKey
    });
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–Ω–±–∞–Ω –¥–æ—Å–∫—É
    setKanbanKey(prev => {
      const newKey = prev + 1;
      console.log('üîÑ Updating kanban key:', prev, '->', newKey);
      return newKey;
    });
    
    setIsEditModalOpen(false);
    setSelectedProject(null);
    setDraftProjectData({});
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeEditModal = () => {
    setIsEditModalOpen(false);
    setSelectedProject(null);
    setDraftProjectData({});
  };
  return (
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —É—á–µ—Ç–æ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Header'–∞
    <div style={{ 
      // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ header'–∞ –≤—ã—Å–æ—Ç–æ–π 56px
      position: isMobile ? 'relative' : 'fixed',
      top: isMobile ? 0 : 56,
      left: isMobile ? 0 : 0,
      right: isMobile ? 0 : 0,
      bottom: isMobile ? 0 : 0,
      background: '#ffffff',
      display: 'flex',
      flexDirection: 'column',
      overflow: isMobile ? 'visible' : 'hidden',
      height: isMobile ? '100vh' : 'calc(100vh - 56px)',
      width: isMobile ? '100vw' : 'auto',
      paddingTop: isMobile ? '56px' : 0,
      boxSizing: 'border-box'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <div style={{ 
        background: '#ffffff',
        flexShrink: 0,
        zIndex: 50,
        padding: isMobile ? '8px' : '8px 32px 8px 8px' // –î–æ–±–∞–≤–ª—è–µ–º 32px —Å–ø—Ä–∞–≤–∞ –∫–∞–∫ –≤ Header
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–µ–≤–∞, –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã —Å–ø—Ä–∞–≤–∞ */}
        <div style={{ 
          display: 'flex', 
          flexDirection: isMobile ? 'column' : 'row',
          gap: isMobile ? 12 : 0,
          alignItems: isMobile ? 'flex-start' : 'center', 
          justifyContent: 'space-between'
        }}>
          {/* –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è */}
          <div style={{
            display: 'flex',
            alignItems: isMobile ? 'flex-start' : 'center',
            justifyContent: 'space-between',
            width: isMobile ? '100%' : 'auto', // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É
            marginRight: isMobile ? 0 : 24 // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
          }}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–µ–≤–∞ */}
            <h1 style={{ 
              fontSize: 22,
              fontWeight: 700, 
              margin: 0,
              color: '#333',
              flexShrink: 0
            }}>
              –ü—Ä–æ–≥—Ä–µ—Å—Å –ü—Ä–æ–µ–∫—Ç–æ–≤
            </h1>
            
            {/* –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∞–π–ª–µ –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ */}
            {isMobile && (
              <button
                onClick={() => {
                  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                  setSelectedProject(null);
                  setDraftProjectData({});
                  setIsEditModalOpen(true);
                }}
                style={{
                  padding: '0',
                  borderRadius: '50%',
                  background: '#ffffff',
                  color: '#646cff',
                  border: '2px solid #646cff',
                  fontWeight: 200,
                  fontSize: 24,
                  cursor: 'pointer',
                  whiteSpace: 'nowrap',
                  width: '36px',
                  height: '36px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  flexShrink: 0,
                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
                  lineHeight: 0.8,
                  textAlign: 'center',
                  marginTop: '0',
                  marginRight: '8px',
                  fontFamily: 'Arial, sans-serif'
                }}
                title="–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"
              >
                +
              </button>
            )}
          </div>
          
          {/* –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ (–Ω–∞ –º–æ–±–∞–π–ª–µ) / –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å (–Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ) - –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <div style={{ 
            display: 'flex', 
            gap: 12, 
            alignItems: 'center',
            flexWrap: 'wrap',
            width: isMobile ? '100%' : 'auto',
            justifyContent: isMobile ? 'flex-start' : 'flex-end' // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
          }}>
            {/* –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç" –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
            {!isMobile && (
              <button
                onClick={() => {
                  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                  setSelectedProject(null);
                  setDraftProjectData({});
                  setIsEditModalOpen(true);
                }}
                style={{
                  padding: '8px 16px',
                  borderRadius: 6,
                  background: '#fff',
                  color: '#646cff',
                  border: '2px solid #646cff',
                  fontWeight: 600,
                  fontSize: 14,
                  cursor: 'pointer',
                  whiteSpace: 'nowrap',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  flexShrink: 0,
                  marginRight: 16 // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–æ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
                }}
              >
                –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
              </button>
            )}
            {/* –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ */}
            <select
              value={dateFilter}
              onChange={(e) => setDateFilter(e.target.value as 'all' | 'today' | 'week' | 'month' | 'custom')}
              style={{
                padding: '8px 12px',
                borderRadius: 6,
                border: '1px solid #ccc',
                fontSize: 14,
                minWidth: '120px',
                height: '36px',
                flex: 'none',
                boxSizing: 'border-box'
              }}
            >
              <option value="all">–í—Å–µ –¥–∞—Ç—ã</option>
              <option value="today">–°–µ–≥–æ–¥–Ω—è</option>
              <option value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</option>
              <option value="month">–ó–∞ –º–µ—Å—è—Ü</option>
              <option value="custom">–ü–µ—Ä–∏–æ–¥</option>
            </select>
            
            {/* –ü–æ–ª—è –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ */}
            {dateFilter === 'custom' && (
              <>
                <input
                  type="date"
                  value={customDateFrom}
                  onChange={(e) => setCustomDateFrom(e.target.value)}
                  style={{
                    padding: '8px 12px',
                    borderRadius: 6,
                    border: '1px solid #ccc',
                    fontSize: 14,
                    height: '36px',
                    flex: 'none',
                    width: '140px',
                    boxSizing: 'border-box'
                  }}
                />
                <span style={{ color: '#666', lineHeight: '36px' }}>‚Äî</span>
                <input
                  type="date"
                  value={customDateTo}
                  onChange={(e) => setCustomDateTo(e.target.value)}
                  style={{
                    padding: '8px 12px',
                    borderRadius: 6,
                    border: '1px solid #ccc',
                    fontSize: 14,
                    height: '36px',
                    flex: 'none',
                    width: '140px',
                    boxSizing: 'border-box'
                  }}
                />
              </>
            )}
            
            {/* –ü–æ–∏—Å–∫ —Å –∏–∫–æ–Ω–∫–æ–π –ª—É–ø—ã */}
            <div style={{ 
              position: 'relative',
              flex: isMobile ? '1' : 'none',
              minWidth: isMobile ? '0' : 'auto',
              width: isMobile ? '100%' : 'auto'
            }}>
              <svg
                style={{
                  position: 'absolute',
                  left: '12px',
                  top: '50%',
                  transform: 'translateY(-50%)',
                  pointerEvents: 'none'
                }}
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <circle 
                  cx="11" 
                  cy="11" 
                  r="8" 
                  stroke="#666" 
                  strokeWidth="2"
                  fill="none"
                />
                <path 
                  d="m21 21-4.35-4.35" 
                  stroke="#666" 
                  strokeWidth="2" 
                  strokeLinecap="round"
                />
              </svg>
              <input
                type="text"
                placeholder=""
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                style={{
                  width: '100%',
                  padding: '8px 12px 8px 36px',
                  borderRadius: 6,
                  border: '1px solid #ccc',
                  fontSize: 14,
                  height: '36px',
                  boxSizing: 'border-box'
                }}
              />
            </div>
          </div>
        </div>
      </div>
      
      {/* –ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ –±–µ–ª–æ–π –ø–æ–¥–ª–æ–∂–∫–∏ */}
      <div style={{
        flex: 1, // –ó–∞–Ω–∏–º–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –º–µ—Å—Ç–æ
        overflowX: 'auto', // –†–ê–ó–†–ï–®–ê–ï–ú –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        overflowY: isMobile ? 'auto' : 'hidden', // –ù–∞ –º–æ–±–∞–π–ª–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        position: 'relative',
        height: '100%', // –ó–∞–Ω–∏–º–∞–µ–º –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É
        width: '100%',
        boxSizing: 'border-box'
      }}>
        <KanbanBoard 
          key={kanbanKey} // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
          companyId={effectiveCompanyId}
          onProjectEdit={handleProjectEdit}
          onProjectDelete={(project) => {
            console.log('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç:', project);
            // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
          }}
          searchTerm={searchTerm}
          dateFilter={dateFilter}
          customDateFrom={customDateFrom}
          customDateTo={customDateTo}
        />
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ */}
      {isEditModalOpen && (
        <div style={{
          position: 'fixed',
          top: 56,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: isMobile ? 'flex-start' : 'center',
          justifyContent: 'center',
          zIndex: 1000,
          padding: isMobile ? '0' : '20px',
          overflow: 'auto'
        }}>
          <div style={{
            background: '#ffffff',
            borderRadius: isMobile ? 0 : 12,
            width: isMobile ? '100vw' : '95vw',
            height: isMobile ? 'calc(100vh - 56px)' : 'calc(95vh - 56px)',
            position: 'relative',
            display: 'flex',
            overflow: 'hidden'
          }}>
            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
            <button
              onClick={closeEditModal}
              style={{
                position: 'absolute',
                top: 18,
                right: -20,
                background: 'transparent',
                border: 'none',
                borderRadius: 0,
                outline: 'none',
                boxShadow: 'none',
                width: 48,
                height: 48,
                fontSize: 36,
                cursor: 'pointer',
                color: '#666',
                zIndex: 1001,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}
              title="–ó–∞–∫—Ä—ã—Ç—å"
            >
              √ó
            </button>
            
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
            <div style={{
              position: 'absolute',
              top: 24,
              left: 20,
              right: 72,
              zIndex: 1002
            }}>
              <h2 style={{
                fontSize: 24,
                fontWeight: 700,
                margin: 0,
                color: '#333'
              }}>
                {selectedProject ? `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ${selectedProject.name}` : '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞'}
              </h2>
            </div>
            
            {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ */}
            <div style={{
              display: 'flex',
              flexDirection: isMobile ? 'column' : 'row',
              width: '100%',
              height: '100%',
              gap: isMobile ? 8 : 16,
              padding: isMobile ? '64px 0 0 0' : '64px 16px 16px 16px'
            }}>
              {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞ */}
              <div style={{
                flex: isMobile ? 'none' : 1,
                height: isMobile ? 'auto' : '100%',
                minHeight: isMobile ? '300px' : 'auto',
                overflow: 'auto',
                paddingBottom: isMobile ? '20px' : '0',
                paddingLeft: isMobile ? '20px' : '24px'
              }}>
                <CalculationDetails
                  draft={draftProjectData}
                  companyId={effectiveCompanyId}
                  settings={settings}
                  onTotalChange={(total) => {
                    console.log('üí∞ Total price calculated:', total);
                    setTotalPrice(total);
                  }}
                  exactHeight={draftProjectData?.exactHeight || false}
                />
              </div>
              
              {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –§–æ—Ä–º–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ */}
              <div style={{
                flex: isMobile ? 'none' : '0 0 480px',
                width: isMobile ? '100%' : 'auto',
                height: isMobile ? 'auto' : '100%',
                minHeight: isMobile ? '500px' : 'auto',
                display: 'flex',
                flexDirection: 'column',
                overflow: 'hidden'
              }}>
                <div style={{
                  flex: 1,
                  overflow: 'auto',
                  paddingBottom: isMobile ? '20px' : '80px',
                  paddingLeft: isMobile ? '20px' : '24px'
                }}>
                  <CalculatorForm
                    companyId={effectiveCompanyId}
                    user={user}
                    selectedCompanyId={effectiveCompanyId}
                    settings={settings}
                    isLoadingData={isLoadingData}
                    onChangeDraft={setDraftProjectData}
                    selectedProject={selectedProject || undefined}
                    onNewProject={handleProjectUpdate}
                    totalPrice={totalPrice}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProjectProgressPage; 